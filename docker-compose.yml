networks:
  web:
    external: true
  lan:
    external: false
    name: lan_${NAME}

services:
  web:
    build:
      context: .
      dockerfile: Dockerfile
    restart: always
    volumes:
      - ./app:/app
    ports:
      - "8000:8000"  # Localhost
    env_file:
      - .env
    depends_on:
      - db
    networks:
      - web
      - lan
    command: >
      sh -c "
      if [ ! -f manage.py ]; then
        django-admin startproject myproject .;
      fi &&
      if [ -f myproject/settings.py ]; then
        # Ajouter les imports en haut du fichier s'ils n'existent pas
        grep -qxF 'import os' myproject/settings.py || sed -i '1iimport os' myproject/settings.py &&
        grep -qxF 'from dotenv import load_dotenv; load_dotenv()' myproject/settings.py || sed -i '2ifrom dotenv import load_dotenv; load_dotenv()' myproject/settings.py &&
        # Ajouter PROJECT_NAME s'il n'existe pas
        grep -qxF 'PROJECT_NAME = os.getenv(\"NAME\", \"default\")' myproject/settings.py || \
        sed -i '3iPROJECT_NAME = os.getenv(\"NAME\", \"default\")' myproject/settings.py &&
        # Ajouter ou modifier ALLOWED_HOSTS
        sed -i \"s/^ALLOWED_HOSTS.*/ALLOWED_HOSTS = [f\\\"{PROJECT_NAME}.jrcan.dev\\\", \\\"localhost\\\", \\\"127.0.0.1\\\"]\"/\" myproject/settings.py || \
        echo \"ALLOWED_HOSTS = [f\\\"{PROJECT_NAME}.jrcan.dev\\\", \\\"localhost\\\", \\\"127.0.0.1\\\"]\" >> myproject/settings.py;
      fi &&
      python manage.py runserver 0.0.0.0:8000
      "
    labels:
      - traefik.enable=true
      - traefik.http.routers.${NAME}.entryPoints=websecure
      - traefik.http.routers.${NAME}.rule=Host(`${NAME}.jrcan.dev`)
      - traefik.http.routers.${NAME}.tls=true
      - traefik.http.routers.${NAME}.tls.certresolver=myresolver

  db:
    image: postgres:latest
    restart: always
    environment:
      POSTGRES_DB: django_db
      POSTGRES_USER: django_user
      POSTGRES_PASSWORD: secure_password
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - lan

volumes:
  postgres_data: