version: '3.8'

services:
  web:
    build:
      context: .
      dockerfile: Dockerfile
    volumes:
      - ./app:/app
    ports:
      - "8000:8000"
    env_file:
      - .env
    depends_on:
      - db
    command: >
      sh -c "
      if [ ! -f manage.py ]; then
        django-admin startproject myproject .;
      fi &&
      if [ -f myproject/settings.py ]; then
        # Ajouter les imports en haut du fichier s'ils n'existent pas
        grep -qxF 'import os' myproject/settings.py || sed -i '1iimport os' myproject/settings.py &&
        grep -qxF 'from dotenv import load_dotenv; load_dotenv()' myproject/settings.py || sed -i '2ifrom dotenv import load_dotenv; load_dotenv()' myproject/settings.py &&
        # Ajouter ou modifier ALLOWED_HOSTS
        sed -i \"s/^ALLOWED_HOSTS.*/ALLOWED_HOSTS = os.getenv('DJANGO_ALLOWED_HOSTS', 'localhost').split(',')/\" myproject/settings.py || \
        echo \"ALLOWED_HOSTS = os.getenv('DJANGO_ALLOWED_HOSTS', 'localhost').split(',')\" >> myproject/settings.py;
      fi &&
      python manage.py runserver 0.0.0.0:8000
      "

  db:
    image: postgres:latest
    restart: always
    environment:
      POSTGRES_DB: django_db
      POSTGRES_USER: django_user
      POSTGRES_PASSWORD: secure_password
    volumes:
      - postgres_data:/var/lib/postgresql/data  # Volume pour la base de donn√©es
    networks:
      - lan

networks:
  lan:
    driver: bridge

volumes:
  postgres_data:
